[{"/Users/eberaguilera/Documents/GitHub/juegamex-site/src/index.js":"1","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/reportWebVitals.js":"2","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/App.js":"3","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Banner.js":"4","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Contact.js":"5","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/NavBar.js":"6","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Footer.js":"7","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Projects.js":"8","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Skills.js":"9","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/MailchimpForm.js":"10","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/ProjectCard.js":"11","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Newsletter.js":"12"},{"size":535,"mtime":1670596058000,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1670596058000,"results":"15","hashOfConfig":"14"},{"size":544,"mtime":1679086639829,"results":"16","hashOfConfig":"14"},{"size":2578,"mtime":1679082178617,"results":"17","hashOfConfig":"14"},{"size":3717,"mtime":1670596058000,"results":"18","hashOfConfig":"14"},{"size":1953,"mtime":1679087972533,"results":"19","hashOfConfig":"14"},{"size":1008,"mtime":1670596058000,"results":"20","hashOfConfig":"14"},{"size":4643,"mtime":1679103716759,"results":"21","hashOfConfig":"14"},{"size":2421,"mtime":1670596058000,"results":"22","hashOfConfig":"14"},{"size":591,"mtime":1670596058000,"results":"23","hashOfConfig":"14"},{"size":359,"mtime":1670596058000,"results":"24","hashOfConfig":"14"},{"size":557,"mtime":1679080655315,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oafikz",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},"/Users/eberaguilera/Documents/GitHub/juegamex-site/src/index.js",[],[],"/Users/eberaguilera/Documents/GitHub/juegamex-site/src/reportWebVitals.js",[],[],"/Users/eberaguilera/Documents/GitHub/juegamex-site/src/App.js",["71","72","73"],[],"import logo from './logo.svg';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { NavBar } from \"./components/NavBar\";\nimport { Banner } from \"./components/Banner\";\nimport { Skills } from \"./components/Skills\";\nimport { Projects } from \"./components/Projects\";\nimport { Contact } from \"./components/Contact\";\nimport { Footer } from \"./components/Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <Banner />\n      <Projects />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Banner.js",["74","75","76"],[],"import { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport headerImg from \"../assets/img/header-img.svg\";\nimport { ArrowRightCircle } from 'react-bootstrap-icons';\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Banner = () => {\n  const [loopNum, setLoopNum] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const [text, setText] = useState('');\n  const [delta, setDelta] = useState(300 - Math.random() * 100);\n  const [index, setIndex] = useState(1);\n  const toRotate = [ \"Web Developer\", \"Web Designer\", \"UI/UX Designer\" ];\n  const period = 2000;\n\n  useEffect(() => {\n    let ticker = setInterval(() => {\n      tick();\n    }, delta);\n\n    return () => { clearInterval(ticker) };\n  }, [text])\n\n  const tick = () => {\n    let i = loopNum % toRotate.length;\n    let fullText = toRotate[i];\n    let updatedText = isDeleting ? fullText.substring(0, text.length - 1) : fullText.substring(0, text.length + 1);\n\n    setText(updatedText);\n\n    if (isDeleting) {\n      setDelta(prevDelta => prevDelta / 2);\n    }\n\n    if (!isDeleting && updatedText === fullText) {\n      setIsDeleting(true);\n      setIndex(prevIndex => prevIndex - 1);\n      setDelta(period);\n    } else if (isDeleting && updatedText === '') {\n      setIsDeleting(false);\n      setLoopNum(loopNum + 1);\n      setIndex(1);\n      setDelta(500);\n    } else {\n      setIndex(prevIndex => prevIndex + 1);\n    }\n  }\n\n  return (\n    <section className=\"banner\" id=\"home\">\n      <Container>\n        <Row className=\"aligh-items-center\">\n          <Col xs={12} md={6} xl={7}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <h1>{`Juegamex`}</h1>\n                <h2>{`\n                Juego de mesa`}</h2>\n                  <p>Juegamex es un juego de mesa educativo para niños de primaria y secundaria con el objetivo de promover de manera didáctica y divertida educación sobre historia de México, cultura de la legalidad, derechos humanos, entre otros.</p>\n              </div>}\n            </TrackVisibility>\n          </Col>\n          <Col xs={12} md={6} xl={5}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"}>\n                  <img src={headerImg} alt=\"Header Img\"/>\n                </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Contact.js",["77"],[],"import { useState } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport contactImg from \"../assets/img/contact-img.svg\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\n\nexport const Contact = () => {\n  const formInitialDetails = {\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n    message: ''\n  }\n  const [formDetails, setFormDetails] = useState(formInitialDetails);\n  const [buttonText, setButtonText] = useState('Send');\n  const [status, setStatus] = useState({});\n\n  const onFormUpdate = (category, value) => {\n      setFormDetails({\n        ...formDetails,\n        [category]: value\n      })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setButtonText(\"Sending...\");\n    let response = await fetch(\"http://localhost:5000/contact\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json;charset=utf-8\",\n      },\n      body: JSON.stringify(formDetails),\n    });\n    setButtonText(\"Send\");\n    let result = await response.json();\n    setFormDetails(formInitialDetails);\n    if (result.code == 200) {\n      setStatus({ succes: true, message: 'Message sent successfully'});\n    } else {\n      setStatus({ succes: false, message: 'Something went wrong, please try again later.'});\n    }\n  };\n\n  return (\n    <section className=\"contact\" id=\"connect\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <img className={isVisible ? \"animate__animated animate__zoomIn\" : \"\"} src={contactImg} alt=\"Contact Us\"/>\n              }\n            </TrackVisibility>\n          </Col>\n          <Col size={12} md={6}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n                <div className={isVisible ? \"animate__animated animate__fadeIn\" : \"\"}>\n                <h2>Get In Touch</h2>\n                <form onSubmit={handleSubmit}>\n                  <Row>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.firstName} placeholder=\"First Name\" onChange={(e) => onFormUpdate('firstName', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"text\" value={formDetails.lasttName} placeholder=\"Last Name\" onChange={(e) => onFormUpdate('lastName', e.target.value)}/>\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"email\" value={formDetails.email} placeholder=\"Email Address\" onChange={(e) => onFormUpdate('email', e.target.value)} />\n                    </Col>\n                    <Col size={12} sm={6} className=\"px-1\">\n                      <input type=\"tel\" value={formDetails.phone} placeholder=\"Phone No.\" onChange={(e) => onFormUpdate('phone', e.target.value)}/>\n                    </Col>\n                    <Col size={12} className=\"px-1\">\n                      <textarea rows=\"6\" value={formDetails.message} placeholder=\"Message\" onChange={(e) => onFormUpdate('message', e.target.value)}></textarea>\n                      <button type=\"submit\"><span>{buttonText}</span></button>\n                    </Col>\n                    {\n                      status.message &&\n                      <Col>\n                        <p className={status.success === false ? \"danger\" : \"success\"}>{status.message}</p>\n                      </Col>\n                    }\n                  </Row>\n                </form>\n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n    </section>\n  )\n}\n","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/NavBar.js",["78","79","80","81","82","83"],[],"import { useState, useEffect } from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport logo from '../assets/img/logo.svg';\nimport './navbar.css'; \nimport navIcon1 from '../assets/img/nav-icon1.svg';\nimport navIcon2 from '../assets/img/nav-icon2.svg';\nimport navIcon3 from '../assets/img/nav-icon3.svg';\nimport { HashLink } from 'react-router-hash-link';\nimport {\n  BrowserRouter as Router\n} from \"react-router-dom\";\n\nexport const NavBar = () => {\n\n  const [activeLink, setActiveLink] = useState('home');\n  const [scrolled, setScrolled] = useState(false);\n\n  useEffect(() => {\n    const onScroll = () => {\n      if (window.scrollY > 50) {\n        setScrolled(true);\n      } else {\n        setScrolled(false);\n      }\n    }\n\n    window.addEventListener(\"scroll\", onScroll);\n\n    return () => window.removeEventListener(\"scroll\", onScroll);\n  }, [])\n\n  const onUpdateActiveLink = (value) => {\n    setActiveLink(value);\n  }\n\n  return (\n    <Router>\n      <Navbar expand=\"md\" className={scrolled ? \"scrolled\" : \"glass\"}>\n        <Container>\n          <Navbar.Brand href=\"/\" className=\"logo\">\n            <img src={logo} alt=\"Logo\" className=\"\"/>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\">\n            <span className=\"navbar-toggler-icon\"></span>\n          </Navbar.Toggle>\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <span className=\"navbar-text\">\n              <div className=\"social-icon\">\n                <a href=\"#\"><img src={navIcon1} alt=\"\" /></a>\n                <a href=\"#\"><img src={navIcon2} alt=\"\" /></a>\n                <a href=\"#\"><img src={navIcon3} alt=\"\" /></a>\n              </div>\n              <HashLink to='#connect'>\n                <a href=\"../Reglamento.pdf\"><button className=\"vvd\"><span>Descargar</span></button></a>\n              </HashLink>\n            </span>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </Router>\n  )\n}\n","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Footer.js",["84","85","86"],[],"import { Container, Row, Col } from \"react-bootstrap\";\nimport { MailchimpForm } from \"./MailchimpForm\";\nimport logo from \"../assets/img/logo.svg\";\nimport navIcon1 from \"../assets/img/nav-icon1.svg\";\nimport navIcon2 from \"../assets/img/nav-icon2.svg\";\nimport navIcon3 from \"../assets/img/nav-icon3.svg\";\n\nexport const Footer = () => {\n  return (\n    <footer className=\"footer\">\n      <Container>\n        <Row className=\"align-items-center\">\n          <MailchimpForm />\n          <Col size={12} sm={6}>\n            <img src={logo} alt=\"Logo\" />\n          </Col>\n          <Col size={12} sm={6} className=\"text-center text-sm-end\">\n            <div className=\"social-icon\">\n              <a href=\"#\"><img src={navIcon1} alt=\"Icon\" /></a>\n              <a href=\"#\"><img src={navIcon2} alt=\"Icon\" /></a>\n              <a href=\"#\"><img src={navIcon3} alt=\"Icon\" /></a>\n            </div>\n            <p>Copyright 2022. All Rights Reserved</p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  )\n}\n","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Projects.js",["87","88","89","90"],[],"import { Container, Row, Col, Tab, Nav } from \"react-bootstrap\";\nimport { ProjectCard } from \"./ProjectCard\";\nimport projImg1 from \"../assets/img/project-img1.png\";\nimport projImg2 from \"../assets/img/project-img2.png\";\nimport projImg3 from \"../assets/img/project-img3.png\";\nimport colorSharp2 from \"../assets/img/color-sharp2.png\";\nimport 'animate.css';\nimport TrackVisibility from 'react-on-screen';\nimport { TypeH1 } from \"react-bootstrap-icons\";\n\nexport const Projects = () => {\n\n  const projects = [\n    {\n      title: \"Business Startup\",\n      description: \"Design & Development\",\n      imgUrl: projImg1,\n    },\n    {\n      title: \"Business Startup\",\n      description: \"Design & Development\",\n      imgUrl: projImg2,\n    },\n    {\n      title: \"Business Startup\",\n      description: \"Design & Development\",\n      imgUrl: projImg3,\n    },\n    {\n      title: \"Business Startup\",\n      description: \"Design & Development\",\n      imgUrl: projImg1,\n    },\n    {\n      title: \"Business Startup\",\n      description: \"Design & Development\",\n      imgUrl: projImg2,\n    },\n    {\n      title: \"Business Startup\",\n      description: \"Design & Development\",\n      imgUrl: projImg3,\n    },\n  ];\n\n  return (\n    <section className=\"project\" id=\"project\">\n      <Container>\n        <Row>\n          <Col size={12}>\n            <TrackVisibility>\n              {({ isVisible }) =>\n              <div className={isVisible ? \"animate__animated animate__fadeIn\": \"\"}>\n                <h2>Información</h2>\n                <p></p>\n                <Tab.Container id=\"projects-tabs\" defaultActiveKey=\"first\">\n                  <Nav variant=\"pills\" className=\"nav-pills mb-5 justify-content-center align-items-center\" id=\"pills-tab\">\n                    <Nav.Item>\n                      <Nav.Link eventKey=\"first\">Reglas</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                      <Nav.Link eventKey=\"second\">Tab 2</Nav.Link>\n                    </Nav.Item>\n                    <Nav.Item>\n                      <Nav.Link eventKey=\"third\">Tab 3</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                  <Tab.Content id=\"slideInUp\" className={isVisible ? \"animate__animated animate__slideInUp\" : \"\"}>\n                    <Tab.Pane eventKey=\"first\">\n                      <Row>\n                        <div className=\"pannelText\">\n                          {\"Al empezar el juego, todos los equipos o jugadores lanzaran un dado, el que obtenga el número más alto empieza y a partir de él/ella/ellos/ellas se turnaran según las manecillas del reloj. El primer turno, el equipo o jugador/jugadora posicionará su ficha en la casilla del tablero que quiera. Cada casilla de divide por las líneas negras (Hay Casillas que contienen más de un estado, esto se puede saber porque la línea no es negra sino es del color de la región pero un poco más obscuro). Dependiendo del  ícono que se  encuentra  en  el  estado,  el  equipo  o jugador/jugadora  tomará una tarjeta  de ese  tipo,  deberá responderla correctamente para poder quedársela.\"}\n                        </div>\n                        <div className=\"pannelText\">\n                        {\n                          \"En cada turno, el equipo o jugador/jugadora deberá tirar los 2 dados  y  deberá moverse  ese  número  de  veces,  durante  su movimiento se pueden repetir casillas, pero se tiene que mover el total de casillas que aparezcan en la suma de los dados. NO puede haber más de una ficha por estado y NO se puede caer en la misma casilla que ya estaba un turno antes.\"\n                        }\n                        </div>\n                      </Row>\n                    </Tab.Pane>\n                    <Tab.Pane eventKey=\"section\">\n                      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque quam, quod neque provident velit, rem explicabo excepturi id illo molestiae blanditiis, eligendi dicta officiis asperiores delectus quasi inventore debitis quo.</p>\n                    </Tab.Pane>\n                    <Tab.Pane eventKey=\"third\">\n                      <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque quam, quod neque provident velit, rem explicabo excepturi id illo molestiae blanditiis, eligendi dicta officiis asperiores delectus quasi inventore debitis quo.</p>\n                    </Tab.Pane>\n                  </Tab.Content>\n                </Tab.Container>\n              </div>}\n            </TrackVisibility>\n          </Col>\n        </Row>\n      </Container>\n      <img className=\"background-image-right\" src={colorSharp2}></img>\n    </section>\n  )\n}\n","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Skills.js",["91","92","93","94","95","96","97"],[],"import meter1 from \"../assets/img/meter1.svg\";\nimport meter2 from \"../assets/img/meter2.svg\";\nimport meter3 from \"../assets/img/meter3.svg\";\nimport Carousel from 'react-multi-carousel';\nimport 'react-multi-carousel/lib/styles.css';\nimport arrow1 from \"../assets/img/arrow1.svg\";\nimport arrow2 from \"../assets/img/arrow2.svg\";\nimport colorSharp from \"../assets/img/color-sharp.png\"\n\nexport const Skills = () => {\n  const responsive = {\n    superLargeDesktop: {\n      // the naming can be any, depends on you.\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n\n  return (\n    <section className=\"skill\" id=\"skills\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"skill-bx wow zoomIn\">\n                        <h2>Skills</h2>\n                        <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.<br></br> Lorem Ipsum has been the industry's standard dummy text.</p>\n                        <Carousel responsive={responsive} infinite={true} className=\"owl-carousel owl-theme skill-slider\">\n                            <div className=\"item\">\n                                <img src={meter1} alt=\"Image\" />\n                                <h5>Web Development</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter2} alt=\"Image\" />\n                                <h5>Brand Identity</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter3} alt=\"Image\" />\n                                <h5>Logo Design</h5>\n                            </div>\n                            <div className=\"item\">\n                                <img src={meter1} alt=\"Image\" />\n                                <h5>Web Development</h5>\n                            </div>\n                        </Carousel>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <img className=\"background-image-left\" src={colorSharp} alt=\"Image\" />\n    </section>\n  )\n}\n","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/MailchimpForm.js",[],[],"/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/ProjectCard.js",["98"],[],"import { Col } from \"react-bootstrap\";\n\nexport const ProjectCard = ({ title, description, imgUrl }) => {\n  return (\n    <Col size={12} sm={6} md={4}>\n      <div className=\"proj-imgbx\">\n        <img src={imgUrl} />\n        <div className=\"proj-txtx\">\n          <h4>{title}</h4>\n          <span>{description}</span>\n        </div>\n      </div>\n    </Col>\n  )\n}\n","/Users/eberaguilera/Documents/GitHub/juegamex-site/src/components/Newsletter.js",["99","100","101","102","103"],[],"import { useState, useEffect } from \"react\";\nimport { Col, Row, Alert, Container } from \"react-bootstrap\";\n\nexport const Newsletter = ({ status, message, onValidated }) => {\n  const [email, setEmail] = useState('');\n\n  useEffect(() => {\n    if (status === 'success') clearFields();\n  }, [status])\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    email &&\n    email.indexOf(\"@\") > -1 &&\n    onValidated({\n      EMAIL: email\n    })\n  }\n\n  const clearFields = () => {\n    setEmail('');\n  }\n\n  return(\n    <div className = \"newsletter\"></div>\n  )\n}\n",{"ruleId":"104","severity":1,"message":"105","line":1,"column":8,"nodeType":"106","messageId":"107","endLine":1,"endColumn":12},{"ruleId":"104","severity":1,"message":"108","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":16},{"ruleId":"104","severity":1,"message":"109","line":8,"column":10,"nodeType":"106","messageId":"107","endLine":8,"endColumn":17},{"ruleId":"104","severity":1,"message":"110","line":4,"column":10,"nodeType":"106","messageId":"107","endLine":4,"endColumn":26},{"ruleId":"104","severity":1,"message":"111","line":13,"column":10,"nodeType":"106","messageId":"107","endLine":13,"endColumn":15},{"ruleId":"112","severity":1,"message":"113","line":23,"column":6,"nodeType":"114","endLine":23,"endColumn":12,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":39,"column":21,"nodeType":"118","messageId":"119","endLine":39,"endColumn":23},{"ruleId":"104","severity":1,"message":"120","line":2,"column":18,"nodeType":"106","messageId":"107","endLine":2,"endColumn":21},{"ruleId":"104","severity":1,"message":"121","line":15,"column":10,"nodeType":"106","messageId":"107","endLine":15,"endColumn":20},{"ruleId":"104","severity":1,"message":"122","line":32,"column":9,"nodeType":"106","messageId":"107","endLine":32,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":49,"column":17,"nodeType":"125","endLine":49,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":50,"column":17,"nodeType":"125","endLine":50,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":51,"column":17,"nodeType":"125","endLine":51,"endColumn":29},{"ruleId":"123","severity":1,"message":"124","line":19,"column":15,"nodeType":"125","endLine":19,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":20,"column":15,"nodeType":"125","endLine":20,"endColumn":27},{"ruleId":"123","severity":1,"message":"124","line":21,"column":15,"nodeType":"125","endLine":21,"endColumn":27},{"ruleId":"104","severity":1,"message":"126","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":21},{"ruleId":"104","severity":1,"message":"127","line":9,"column":10,"nodeType":"106","messageId":"107","endLine":9,"endColumn":16},{"ruleId":"104","severity":1,"message":"128","line":13,"column":9,"nodeType":"106","messageId":"107","endLine":13,"endColumn":17},{"ruleId":"129","severity":1,"message":"130","line":94,"column":7,"nodeType":"125","endLine":94,"endColumn":65},{"ruleId":"104","severity":1,"message":"131","line":6,"column":8,"nodeType":"106","messageId":"107","endLine":6,"endColumn":14},{"ruleId":"104","severity":1,"message":"132","line":7,"column":8,"nodeType":"106","messageId":"107","endLine":7,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":41,"column":33,"nodeType":"125","endLine":41,"endColumn":65},{"ruleId":"133","severity":1,"message":"134","line":45,"column":33,"nodeType":"125","endLine":45,"endColumn":65},{"ruleId":"133","severity":1,"message":"134","line":49,"column":33,"nodeType":"125","endLine":49,"endColumn":65},{"ruleId":"133","severity":1,"message":"134","line":53,"column":33,"nodeType":"125","endLine":53,"endColumn":65},{"ruleId":"133","severity":1,"message":"134","line":61,"column":9,"nodeType":"125","endLine":61,"endColumn":79},{"ruleId":"129","severity":1,"message":"130","line":7,"column":9,"nodeType":"125","endLine":7,"endColumn":29},{"ruleId":"104","severity":1,"message":"135","line":2,"column":10,"nodeType":"106","messageId":"107","endLine":2,"endColumn":13},{"ruleId":"104","severity":1,"message":"136","line":2,"column":15,"nodeType":"106","messageId":"107","endLine":2,"endColumn":18},{"ruleId":"104","severity":1,"message":"137","line":2,"column":20,"nodeType":"106","messageId":"107","endLine":2,"endColumn":25},{"ruleId":"104","severity":1,"message":"138","line":2,"column":27,"nodeType":"106","messageId":"107","endLine":2,"endColumn":36},{"ruleId":"104","severity":1,"message":"139","line":11,"column":9,"nodeType":"106","messageId":"107","endLine":11,"endColumn":21},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Skills' is defined but never used.","'Contact' is defined but never used.","'ArrowRightCircle' is defined but never used.","'index' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'delta' and 'tick'. Either include them or remove the dependency array.","ArrayExpression",["140"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Nav' is defined but never used.","'activeLink' is assigned a value but never used.","'onUpdateActiveLink' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ProjectCard' is defined but never used.","'TypeH1' is defined but never used.","'projects' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'arrow1' is defined but never used.","'arrow2' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'Col' is defined but never used.","'Row' is defined but never used.","'Alert' is defined but never used.","'Container' is defined but never used.","'handleSubmit' is assigned a value but never used.",{"desc":"141","fix":"142"},"Update the dependencies array to be: [delta, text, tick]",{"range":"143","text":"144"},[792,798],"[delta, text, tick]"]